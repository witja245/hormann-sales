// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------

/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}
@function asset($base, $type, $path) {
  @return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function image($path, $base: $base-url) {
  @return asset($base, 'images/', $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function font($path, $base: $base-url) {
  @return asset($base, 'fonts/', $path);
}

/* пересчет из px в em */

$browser-context: 12; // Default

@function em($pixels, $context: $browser-context) { 
	@return #{$pixels/$context}em;
}

/* пересчет из px в vw */

$max-breakpoint: 1366;

$wide-screen: "(min-width: #{$max-breakpoint}px)";

@function get-vw($target) { 
	$vw-context: ($max-breakpoint*.01) * 1px;
	@return ($target/$vw-context) * 1vw;
}

// Mixin
@mixin vw($size) {
	font-size: get-vw($size);
	// Prevent font-size from getting too big
	@media #{$wide-screen} {
		font-size: $size;
	}
}

// .block-header {
//   font-size: 4.5em; // Fallback
//   @include vw(72px);
// }
